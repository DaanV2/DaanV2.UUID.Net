<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DaanV2.UUID.Net</name>
    </assembly>
    <members>
        <member name="T:DaanV2.UUID.UUID">
            <summary>The class that holds the information of a <see cref="T:DaanV2.UUID.UUID"/> string</summary>
        </member>
        <member name="F:DaanV2.UUID.UUID.Nill">
            <summary>Returns a 'nill' or empty UUID</summary>
        </member>
        <member name="M:DaanV2.UUID.UUID.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="M:DaanV2.UUID.UUID.#ctor(System.Char[])">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Values">The char values of the <see cref="T:DaanV2.UUID.UUID"/></param>
        </member>
        <member name="M:DaanV2.UUID.UUID.#ctor(System.String)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Text">The string representation of the <see cref="T:DaanV2.UUID.UUID"/></param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Equality(DaanV2.UUID.UUID,DaanV2.UUID.UUID)">
            <summary>Compare two <see cref="T:DaanV2.UUID.UUID"/> if they are equal to each other</summary>
            <param name="left">The first <see cref="T:DaanV2.UUID.UUID"/></param>
            <param name="right">the second <see cref="T:DaanV2.UUID.UUID"/> to compare to the first</param>
            <returns>Returns true if two UUID are equal</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Inequality(DaanV2.UUID.UUID,DaanV2.UUID.UUID)">
            <summary>Compare two <see cref="T:DaanV2.UUID.UUID"/> if they are not equal to each other</summary>
            <param name="left">The first <see cref="T:DaanV2.UUID.UUID"/></param>
            <param name="right">the second <see cref="T:DaanV2.UUID.UUID"/> to compare to the first</param>
            <returns>Returns true if two UUID are not equal</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(DaanV2.UUID.UUID)~System.String">
            <summary>Auto converts the <see cref="T:DaanV2.UUID.UUID"/> to a <see cref="T:System.String"/></summary>
            <param name="value">The <see cref="T:DaanV2.UUID.UUID"/> to convert to <see cref="T:System.String"/></param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(DaanV2.UUID.UUID)~System.Char[]">
            <summary>Auto converts the <see cref="T:DaanV2.UUID.UUID"/> to a <see cref="T:System.Char"/>[]</summary>
            <param name="value">The <see cref="T:DaanV2.UUID.UUID"/> to convert to <see cref="T:System.Char"/>[]</param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(System.String)~DaanV2.UUID.UUID">
            <summary>Auto converts the <see cref="T:System.String"/> to a <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="value">The <see cref="T:System.String"/> to convert to <see cref="T:DaanV2.UUID.UUID"/>[]</param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(System.Char[])~DaanV2.UUID.UUID">
            <summary>Auto converts the <see cref="T:System.Char"/>[] to a <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Values">The <see cref="T:System.Char"/>[] to convert to <see cref="T:DaanV2.UUID.UUID"/>[]</param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(DaanV2.UUID.UUID)~System.Guid">
            <summary>Auto converts the <see cref="T:DaanV2.UUID.UUID"/> to a <see cref="T:System.Guid"/></summary>
            <param name="Data">The <see cref="T:DaanV2.UUID.UUID"/> to convert</param>
        </member>
        <member name="M:DaanV2.UUID.UUID.op_Implicit(System.Guid)~DaanV2.UUID.UUID">
            <summary>Auto converts the <see cref="T:System.Guid"/> to a <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Data">The <see cref="T:System.Guid"/> to convert</param>
        </member>
        <member name="M:DaanV2.UUID.UUID.GetVersion">
            <summary>Returns the version of this UUID</summary>
            <returns>The version number that is stored within the UUID</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.GetVariant">
            <summary>Returns the variant of this UUID</summary>
            <returns>The variant number that is stored within the UUID</returns>
        </member>
        <member name="P:DaanV2.UUID.UUID.Chars">
            <summary>Gets or sets the chars of this <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="M:DaanV2.UUID.UUID.ToString">
            <summary>Returns the <see cref="T:System.String"/> representation of the UUID</summary>
            <returns>Returns a <see cref="T:System.String"/> that represents the UUID</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.Equals(System.Object)">
            <summary>Checks if the given obj is equal to this object</summary>
            <param name="obj">The object to compare to</param>
            <returns>Returns if true is the obj is the same as this object</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.Equals(DaanV2.UUID.UUID)">
            <summary>Checks if the given <see cref="T:DaanV2.UUID.UUID"/> is equal to this object</summary>
            <param name="other">The <see cref="T:DaanV2.UUID.UUID"/> to compare to</param>
            <returns>Returns if true is the obj is the same as this object</returns>
        </member>
        <member name="M:DaanV2.UUID.UUID.GetHashCode">
            <summary>Generates the hashcode for this <see cref="T:DaanV2.UUID.UUID"/></summary>
            <returns>A hashcode for this <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="F:DaanV2.UUID.UUID._Chars">
            <summary>Gets or sets the chars of this <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="T:DaanV2.UUID.Generators.GeneratorBase">
            <summary>The base of the a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorBase.Version">
            <summary>Gets the version of the generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorBase.Variant">
            <summary>Gets the variant of the generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorBase.NeedContext">
            <summary>Gets if this generator need context to generate a UUID</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorBase.ContextType">
            <summary>Gets the type needed for the context to generate a UUID</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.GeneratorBase.Generate(System.Object)">
            <summary>Returns a new <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Context">The context needed to generate this UUID</param>
            <returns>Returns a new <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.GeneratorBase.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="T:DaanV2.UUID.Generators.GeneratorInfo">
            <summary>The class that holds the information of a generator</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.GeneratorInfo.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorInfo"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.GeneratorInfo.#ctor(DaanV2.UUID.IUUIDGenerator)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorInfo"/></summary>
            <param name="generator">The generator to copy the info from</param>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorInfo.Version">
            <summary>Gets or sets the version of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorInfo.Variant">
            <summary>Gets or sets the variant of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorInfo.NeedContext">
            <summary>Gets or sets if this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs context to generate <see cref="T:DaanV2.UUID.UUID"/>s</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorInfo.ContextType">
            <summary>Gets or sets what type this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.GeneratorInfo.GeneratorType">
            <summary>Gets or sets the type of generator to be used</summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.GeneratorInfo._Version">
            <summary>The version of the UUID generator</summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.GeneratorInfo._Variant">
            <summary>The variant of the UUID generator</summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.GeneratorInfo._NeedContext">
            <summary>Marks if this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs context to generate <see cref="T:DaanV2.UUID.UUID"/>s</summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.GeneratorInfo._ContextType">
            <summary>The type that this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.GeneratorInfo._GeneratorType">
            <summary>The type of generator to be used</summary>
        </member>
        <member name="T:DaanV2.UUID.Generators.Converter">
            <summary>The class responsible for converting data</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Converter.#cctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Converter"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Converter.ToCharArray(System.Byte[])">
            <summary>Converts a <see cref="T:System.Byte"/>[] to <see cref="T:System.Char"/>[] using hexidecimal. Size needs to be atleast 16</summary>
            <param name="Bytes">The <see cref="T:System.Byte"/>[] that need to be converted to <see cref="T:System.Char"/>[]. The size needs to be atleast 16 items</param>
            <returns>Converts a <see cref="T:System.Byte"/>[] to <see cref="T:System.Char"/>[] using hexidecimal. Size needs to be atleast 16</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Converter.ToCharArray(System.Byte[],System.Int32)">
            <summary>Converts a <see cref="T:System.Byte"/>[] to <see cref="T:System.Char"/>[] using hexidecimal. Size needs to be atleast 16 + startindex</summary>
            <param name="Bytes">The <see cref="T:System.Byte"/>[] that need to be converted to <see cref="T:System.Char"/>[]. The size needs to be atleast 16 items + startindex</param>
            <param name="StartIndex">The index to start at in the byte array</param>
            <returns>Converts a <see cref="T:System.Byte"/>[] to <see cref="T:System.Char"/>[] using hexidecimal. Size needs to be atleast 16</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Converter.ToBytes(System.Char[])">
            <summary>Converts a <see cref="T:System.Char"/>[] to a <see cref="T:System.Byte"/>[] using hexadecimal</summary>
            <param name="Chars">The array to convert to <see cref="T:System.Byte"/>[], array needs to be 35 items</param>
            <returns>Converts a <see cref="T:System.Char"/>[] to a <see cref="T:System.Byte"/>[] using hexadecimal</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Converter.Load">
            <summary>Loads and construct this <see cref="T:DaanV2.UUID.Generators.Converter"/> if it is needed</summary>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version1.GeneratorVariant1">
            DOLATER <summary>add description for class: GeneratorVariant1</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version1.GeneratorVariant1.Version">
            <summary></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version1.GeneratorVariant1.Variant">
            <summary></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version1.GeneratorVariant1.NeedContext">
            <summary></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version1.GeneratorVariant1.ContextType">
            <summary></summary>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version1.Utillity">
            DOLATER <summary>add description for class: Utillity</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version1.Utillity.GetMacAddress">
            <summary>Looks for the mac address of this instance</summary>
            <returns>The mac address</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version1.Utillity.GetMacAddressBytes">
            <summary>Looks for the mac address of this instance</summary>
            <returns>The mac address</returns>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version3.GeneratorVariant1">
            <summary>The UUID Generator Version 3, Variant 1</summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.Version3.GeneratorVariant1._Hasher">
            <summary>The hasher used to generate UUID</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Hasher">
            <summary>The hasher used to generate the UUID</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version3.GeneratorVariant1.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version3.GeneratorVariant1"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Version">
            <summary>Gets the version of this <see cref="T:DaanV2.UUID.Generators.Version3.GeneratorVariant1"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Variant">
            <summary>Gets the variant of this <see cref="T:DaanV2.UUID.Generators.Version3.GeneratorVariant1"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version3.GeneratorVariant1.NeedContext">
            <summary>Gets if this Generator needs context to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version3.GeneratorVariant1.ContextType">
            <summary>Gets what type this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Generate(System.Object)">
            <summary>Returns a new <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Context">The context needed to generate this UUID</param>
            <returns>Returns a new <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Generate(System.Object,System.Text.Encoding)">
            <summary>Generate a <see cref="T:DaanV2.UUID.UUID"/> with the specified context</summary>
            <param name="Context">The text to use to create the <see cref="T:DaanV2.UUID.UUID"/></param>
            <param name="encoding">The encoding to use for converting to bytes</param>
            <returns>Generate a <see cref="T:DaanV2.UUID.UUID"/> with the specified context</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version3.GeneratorVariant1.Generate(System.Int32,System.Text.Encoding,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <param name="encoding">The encoding to use for converting to bytes</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version4.RandomGeneratorBase">
            <summary>An abstract class that has a built in random generator</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version4.RandomGeneratorBase"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.#ctor(System.Int32)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version4.RandomGeneratorBase"/></summary>
            <param name="Seed">The seed used for the random generator</param>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.#ctor(System.Random)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version4.RandomGeneratorBase"/></summary>
            <param name="NumberGenerator"></param>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.NumberGenerator">
            <summary>Gets or sets the random number generator used for generating <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.Version">
            <summary>Gets the version of the generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.Variant">
            <summary>Gets the variant of the generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.NeedContext">
            <summary>Gets if this <see cref="T:DaanV2.UUID.Generators.Version4.RandomGeneratorBase"/> needs context to generate <see cref="T:DaanV2.UUID.UUID"/>s</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.RandomGeneratorBase.ContextType">
            <summary>Gets what type this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="F:DaanV2.UUID.Generators.Version4.RandomGeneratorBase._NumberGenerator">
            <summary>The number generator used for generating the <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version4.GeneratorVariant1">
            <summary>The UUID generator version 4, variant 1</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant1.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version4.GeneratorVariant1"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant1.#ctor(System.Int32)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorBase"/></summary>
            <param name="Seed"></param>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant1.#ctor(System.Random)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorBase"/></summary>
            <param name="NumberGenerator"></param>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.GeneratorVariant1.Version">
            <summary>Gets the version of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.GeneratorVariant1.Variant">
            <summary>Gets the variant of the UUID generator</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant1.Generate(System.Object)">
            <summary>Generates a <see cref="T:DaanV2.UUID.UUID"/> specified by this version and variant format </summary>
            <param name="Context">The context needed to generate this UUID can be null</param>
            <returns>A new generated <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant1.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version4.GeneratorVariant2">
            <summary>The UUID generator Version 4, Variant 2</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant2.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version4.GeneratorVariant1"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant2.#ctor(System.Int32)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorBase"/></summary>
            <param name="Seed">The seed used in the randomiser</param>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant2.#ctor(System.Random)">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.GeneratorBase"/></summary>
            <param name="NumberGenerator">The random number randomiser</param>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.GeneratorVariant2.Version">
            <summary>Gets the version of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version4.GeneratorVariant2.Variant">
            <summary>Gets the variant of the UUID generator</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant2.Generate(System.Object)">
            <summary>Generates a <see cref="T:DaanV2.UUID.UUID"/> specified by this version and variant format </summary>
            <param name="Context">The context needed to generate this UUID can be null</param>
            <returns>A new generated <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version4.GeneratorVariant2.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="T:DaanV2.UUID.Generators.Version5.GeneratorVariant1">
            <summary>The UUID Generator Version 5, Variant 1</summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version5.GeneratorVariant1.#ctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.Generators.Version5.GeneratorVariant1"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Hasher">
            <summary>Gets or sets the hasher used to generate UUID</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Version">
            <summary>Gets the version of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Variant">
            <summary>Gets the variant of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version5.GeneratorVariant1.NeedContext">
            <summary>Gets if this Generator needs context to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="P:DaanV2.UUID.Generators.Version5.GeneratorVariant1.ContextType">
            <summary>Gets what type this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Generate(System.Object)">
            <summary>Returns a new <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Context">The context needed to generate this UUID</param>
            <returns>Returns a new <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Generate(System.Object,System.Text.Encoding)">
            <summary>Generate a <see cref="T:DaanV2.UUID.UUID"/> with the specified context</summary>
            <param name="Context">The text to use to create the <see cref="T:DaanV2.UUID.UUID"/></param>
            <param name="encoding">The encoding to use for converting to bytes</param>
            <returns>Generate a <see cref="T:DaanV2.UUID.UUID"/> with the specified context</returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.Generators.Version5.GeneratorVariant1.Generate(System.Int32,System.Text.Encoding,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <param name="encoding">The encoding to use for converting to bytes</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="F:DaanV2.UUID.Generators.Version5.GeneratorVariant1._Hasher">
            <summary>The hasher used to generate UUID</summary>
        </member>
        <member name="T:DaanV2.UUID.IUUIDGenerator">
            <summary>The interface responsible for determing how a <see cref="T:DaanV2.UUID.UUID"/> generator should behave</summary>
        </member>
        <member name="P:DaanV2.UUID.IUUIDGenerator.Version">
            <summary>Gets the version of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.IUUIDGenerator.Variant">
            <summary>Gets the variant of the UUID generator</summary>
        </member>
        <member name="P:DaanV2.UUID.IUUIDGenerator.NeedContext">
            <summary>Gets if this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs context to generate <see cref="T:DaanV2.UUID.UUID"/>s</summary>
        </member>
        <member name="P:DaanV2.UUID.IUUIDGenerator.ContextType">
            <summary>Gets what type this <see cref="T:DaanV2.UUID.IUUIDGenerator"/> needs to generate a <see cref="T:DaanV2.UUID.UUID"/></summary>
        </member>
        <member name="M:DaanV2.UUID.IUUIDGenerator.Generate(System.Object)">
            <summary>Returns a new <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Context">The context needed to generate this UUID</param>
            <returns>Returns a new <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="M:DaanV2.UUID.IUUIDGenerator.Generate(System.Int32,System.Object[])">
            <summary>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></summary>
            <param name="Count">The amount of UUID to generate</param>
            <param name="Context">The context needed to generate this UUIDs</param>
            <returns>Returns a new collection of <see cref="T:DaanV2.UUID.UUID"/></returns>
        </member>
        <member name="T:DaanV2.UUID.UUIDFactory">
            <summary>the static class that handles the generations of UUIDs or generators through version numbering</summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.Load">
            <summary>Loads all <see cref="T:DaanV2.UUID.IUUIDGenerator"/>s</summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.Load(System.Reflection.Assembly)">
            <summary>Loads all <see cref="T:DaanV2.UUID.IUUIDGenerator"/>s from the given assembly</summary>
            <param name="asm">The assemblies to spit through</param>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.Add(DaanV2.UUID.IUUIDGenerator)">
            <summary>Add the given generator to the interal list</summary>
            <param name="Generator">The generator to add to the list</param>
        </member>
        <member name="F:DaanV2.UUID.UUIDFactory._Generators">
            <summary>The Generators</summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.GetContext(System.Int32,System.Int32,System.Boolean)">
            <summary>Returns the type needed for the generator needs</summary>
            <param name="Version">The version of the generator to use</param>
            <param name="Variant">The variant of the generator to use</param>
            <param name="ForMultipleUUIDGeneration">Marks if there should be multiple items or single</param>
            <returns>Returns the type needed for the generator needs</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.NeedContext(System.Int32,System.Int32)">
            <summary>Returns if the specified generator needs context</summary>
            <param name="Version">The version of the generator to use</param>
            <param name="Variant">The variant of the generator to use</param>
            <returns>Returns if the specified generator needs context</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.GetAvailableVersion">
            <summary>Returns an array of available version of generators</summary>
            <returns>An array of <see cref="T:System.Int32"/> contaning version numbering</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.GetAvailableVariants(System.Int32)">
            <summary>Returns an array of available variants of generators for a specified version</summary>
            <param name="Version">The version to check which variants are aviable</param>
            <returns>An array of <see cref="T:System.Int32"/> contaning variant numbering</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.GetInfo(System.Int32,System.Int32)">
            <summary>Returns a <see cref="T:DaanV2.UUID.Generators.GeneratorInfo"/> about the specified generator</summary>
            <param name="Version">The version of the generator</param>
            <param name="Variant">The variant of the generator</param>
            <returns>Returns a <see cref="T:DaanV2.UUID.Generators.GeneratorInfo"/> about the specified generator</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.#cctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.UUIDFactory"/></summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.CreateGenerator(System.Int32,System.Int32)">
            <summary>Creates the specified generator or returns null</summary>
            <param name="Version">The version of the generator to create</param>
            <param name="Variant">The variant of the generator to create</param>
            <returns>Creates the specified generator or returns null</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.CreateUUID(System.Int32,System.Int32,System.Object)">
            <summary>Generate a <see cref="T:DaanV2.UUID.UUID"/> using the specified version and variant</summary>
            <param name="Version">The version of the generator</param>
            <param name="Variant">The variant of the generator</param>
            <param name="Context">The context needed to generate the UUID(s)</param>
            <returns>Generate a <see cref="T:DaanV2.UUID.UUID"/> using the specified version and variant and specified amount</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDFactory.CreateUUIDs(System.Int32,System.Int32,System.Int32,System.Object[])">
            <summary>Generate a <see cref="T:DaanV2.UUID.UUID"/>[] using the specified version and variant and specified amount</summary>
            <param name="Amount">The amount of UUID to generate</param>
            <param name="Version">The version of the generator</param>
            <param name="Variant">The variant of the generator</param>
            <param name="Context">The context needed to generate the UUID(s)</param>
            <returns>Generate a <see cref="T:DaanV2.UUID.UUID"/>[] using the specified version and variant and specified amount</returns>
        </member>
        <member name="T:DaanV2.UUID.UUIDValidator">
            <summary>The static class that is responisble for validating UUIDs</summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDValidator.#cctor">
            <summary>Creates a new instance of <see cref="T:DaanV2.UUID.UUIDValidator"/></summary>
        </member>
        <member name="M:DaanV2.UUID.UUIDValidator.IsValidUUID(DaanV2.UUID.UUID)">
            <summary>Validates the <see cref="T:DaanV2.UUID.UUID"/>, Checks if it is properly formatted, right version and variant</summary>
            <param name="Value">The <see cref="T:DaanV2.UUID.UUID"/> to check</param>
            <returns>A <see cref="T:System.Boolean"/> that marks if the output was valid or not</returns>
        </member>
        <member name="M:DaanV2.UUID.UUIDValidator.Validate(DaanV2.UUID.UUID)">
            <summary>Validates the <see cref="T:DaanV2.UUID.UUID"/>, Checks if it is properly formatted, right version and variant. throws exeception when an error is encountered</summary>
            <param name="Value">The <see cref="T:DaanV2.UUID.UUID"/> to check</param>
        </member>
    </members>
</doc>
